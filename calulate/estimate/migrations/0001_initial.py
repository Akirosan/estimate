# Generated by Django 3.2.9 on 2021-12-01 20:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Calculate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Укажите наименование', max_length=100, verbose_name='Наименование сметы')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Уникальный слаг')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Дата последнего редактирования')),
                ('text', models.TextField(help_text='Введите описание', max_length=300)),
                ('difficulty_factor', models.FloatField(verbose_name='Коэффициент сложности')),
                ('fuel_price', models.IntegerField(help_text='Затраты на транспорт', validators=[django.core.validators.MinValueValidator(0, 'Минимальное значение: 0')], verbose_name='Транспортные расходы')),
                ('upload', models.FileField(upload_to='uploads/%Y/%m/%d/', verbose_name='Дополнительные файлы')),
                ('tupe_calc', models.CharField(choices=[('estimate', 'Смета'), ('template', 'Шаблон')], default='estimate', max_length=15, verbose_name='Тип расчета')),
            ],
            options={
                'verbose_name': 'Расчёт',
                'verbose_name_plural': 'Расчёты',
                'ordering': ['date_update'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Укажите наименование материала', max_length=100, verbose_name='Название')),
                ('measurement_unit', models.CharField(max_length=10, verbose_name='Еденица измерения')),
                ('price', models.IntegerField(default=0, help_text='Укажите цену за материал', validators=[django.core.validators.MinValueValidator(0, 'Минимальное значение: 0')], verbose_name='Цена материала')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Матeриал',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='QuantityMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Минимальное значение: 1')])),
            ],
        ),
        migrations.CreateModel(
            name='QuantityWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Минимальное значение: 1')])),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Укажите наименование тега', max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Уникальный слаг')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Укажите наименование работы', max_length=100, verbose_name='Название')),
                ('measurement_unit', models.CharField(max_length=10, verbose_name='Еденица измерения')),
                ('price', models.IntegerField(default=0, help_text='Укажите цену за работу', validators=[django.core.validators.MinValueValidator(0, 'Минимальное значение: 0')], verbose_name='Цена работы')),
            ],
            options={
                'verbose_name': 'Работы',
                'verbose_name_plural': 'Работы',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='work',
            index=models.Index(fields=['name'], name='estimate_wo_name_8d03a5_idx'),
        ),
        migrations.AddField(
            model_name='quantitywork',
            name='calculate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calc_quantity', to='estimate.calculate'),
        ),
        migrations.AddField(
            model_name='quantitywork',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_quantity', to='estimate.work'),
        ),
        migrations.AddField(
            model_name='quantitymaterial',
            name='calculate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quantity', to='estimate.calculate'),
        ),
        migrations.AddField(
            model_name='quantitymaterial',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_quantity', to='estimate.material'),
        ),
        migrations.AddIndex(
            model_name='material',
            index=models.Index(fields=['name'], name='estimate_ma_name_0b7d8a_idx'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='calculate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calc_favorite', to='estimate.calculate'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_favorite', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calculate',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calc_author', to=settings.AUTH_USER_MODEL, verbose_name='Автор расчета'),
        ),
        migrations.AddField(
            model_name='calculate',
            name='material',
            field=models.ManyToManyField(related_name='material_calc', through='estimate.QuantityMaterial', to='estimate.Material', verbose_name='Материал'),
        ),
        migrations.AddField(
            model_name='calculate',
            name='tag',
            field=models.ManyToManyField(related_name='tag_calc', to='estimate.Tag', verbose_name='Теги'),
        ),
        migrations.AddField(
            model_name='calculate',
            name='work',
            field=models.ManyToManyField(related_name='work_calc', through='estimate.QuantityWork', to='estimate.Work', verbose_name='Виды работ'),
        ),
        migrations.AddConstraint(
            model_name='quantitywork',
            constraint=models.UniqueConstraint(fields=('calculate', 'work'), name='unicue_work'),
        ),
        migrations.AddConstraint(
            model_name='quantitymaterial',
            constraint=models.UniqueConstraint(fields=('calculate', 'material'), name='unicue_material'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'calculate'), name='add_favorite'),
        ),
    ]
